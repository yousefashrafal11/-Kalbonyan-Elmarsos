{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Input/Input.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","components/store/auth-context.js","components/UI/Card/Card.js","components/UI/Button/Button.js","components/UI/Card/Input/Input.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","AuthContext","React","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","useState","setIsLoggedIn","useEffect","localStorage","getItem","Provider","value","removeItem","setItem","children","Card","className","classes","card","Button","type","button","onClick","disabled","Input","forwardRef","ref","inputRef","useRef","activate","current","focus","useImperativeHandle","control","isValid","invalid","htmlFor","id","label","onChange","onBlur","emailReduce","state","action","val","includes","passwordReduce","trim","length","Login","formIsValid","setFormIsValid","useReducer","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","useContext","emailInputRef","passwordInputRef","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","login","onSubmit","event","preventDefault","target","actions","btn","Home","ctx","home","Navigation","nav","href","MainHeader","App","Fragment","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bcfdd3ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__36XVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__qzbWn\",\"invalid\":\"Input_invalid__1eiCV\",\"actions\":\"Input_actions__kKbiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2Hkyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1u-qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3KESe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__1ZhP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__3GT7Q\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  // isLoading: false,\r\n  isLoggedIn: false,\r\n  onLogout: () => {},\r\n  onLogin: (email, password) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  //! Here we create useState\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  useEffect(() => {\r\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\r\n\r\n    // if (storedUserLoggedInInformation === \"1\") {\r\n    //   setIsLoggedIn(true);\r\n    // }\r\n\r\n    storedUserLoggedInInformation === \"1\" && setIsLoggedIn(true);\r\n  }, []);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const loginHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", \"1\");\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        onLogout: logoutHandler,\r\n        onLogin: loginHandler,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContext;\r\n","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useImperativeHandle, useRef } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const inputRef = useRef();\r\n\r\n  const activate = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { focus: activate };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.control} ${\r\n        props.isValid === false ? classes.invalid : \"\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <input\r\n        ref={inputRef}\r\n        type={props.type}\r\n        id={props.id}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        onBlur={props.onBlur}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../store/auth-context\";\nimport Input from \"../UI/Card/Input/Input\";\n\n//todo -- here use Reduce function to Email\nconst emailReduce = (state, action) => {\n  //todo -- Here make validation on action to 👉 [dispatchEmail]\n\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\n//todo -- here use Reduce function to Password\nconst passwordReduce = (state, action) => {\n  //todo -- Here make validation on action to 👉 [dispatchPasswored]\n\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  //todo comment state here because use Reduce ✍\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  //todo-- Here use Reduce 👇 function optional use name parmters\n  const [emailState, dispatchEmail] = useReducer(emailReduce, {\n    value: \"\",\n    isValid: null,\n  });\n\n  //todo-- Here use Reduce Email 👇optional use name parmters\n  const [passwordState, dispatchPassword] = useReducer(passwordReduce, {\n    value: \"\",\n    isValid: null,\n  });\n\n  //todo -- Here comming Context💪💪💪💪\n  const authCtx = useContext(AuthContext);\n\n  //todo -- Here we use Ref function\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  //todo -- solve issuse if email === true don't make chack imput is empty or not\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n\n    //todo here we use dispatchEmail\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    //todo -- we use useEffect instead of 👉 [setFormIsValid]\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    //todo here we use dispatchPassword\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    //todo -- we use useEffect instead of 👉 [setFormIsValid]\n    // setFormIsValid(\n    //   // enteredEmail.includes(\"@\") && event.target.value.trim().length > 6\n    //   //todo we use [ emailState.value ] instead of 👉 [enteredEmail ]\n    //   emailState.value.includes(\"@\") && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n\n    //todo -- Here we make validation by Reduce Using dispatchEmail\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    //! Here instead of we use 👉 [props] we used 👉[Context]\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      emailInputRef.current.activate();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        {/* //! Here make input feild from input file */}\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        {/* <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div> */}\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","// import React, { useContext } from \"react\";\n// import AuthContext from \"../store/auth-context\";\n\n// import Button from \"../UI/Button/Button\";\n\n// import Card from \"../UI/Card/Card\";\n// import classes from \"./Home.module.css\";\n\n// const Home = (props) => {\n//   const authctx = useContext({ AuthContext });\n\n//   return (\n//     <Card className={classes.home}>\n//       <h1>Welcome back!</h1>\n//       <Button onClick={authctx.onLogout}>Logout</Button>\n//     </Card>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useContext } from \"react\";\nimport AuthContext from \"../store/auth-context\";\n\nimport Button from \"../UI/Button/Button\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Home.module.css\";\n\nconst Home = (props) => {\n  const ctx = useContext(AuthContext);\n  return (\n    <Card className={classes.home}>\n      <h1>Welcome back!</h1>\n      <Button onClick={ctx.onLogout}>Logout</Button>\n    </Card>\n  );\n};\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport AuthContext from \"../store/auth-context\";\nimport classes from \"./Navigation.module.css\";\n/*\nconst Navigation = (props) => {\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {props.isLoggedIn && (\n          <li>\n            <button onClick={props.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n*/\n\n//todo -- use Here Context\n/*\nconst Navigation = (props) => {\n  return (\n    //todo -- Here we use [Consumer object from react this responseble of or in charge of auth users ]\n    <AuthContext.Consumer>\n      {(ctx) => {\n        return (\n          <nav className={classes.nav}>\n            <ul>\n              {ctx.isLoggedIn && (\n                <li>\n                  <a href=\"/\">Users</a>\n                </li>\n              )}\n              {ctx.isLoggedIn && (\n                <li>\n                  <a href=\"/\">Admin</a>\n                </li>\n              )}\n              {ctx.isLoggedIn && (\n                <li>\n                  <button onClick={props.onLogout}>Logout</button>\n                </li>\n              )}\n            </ul>\n          </nav>\n        );\n      }}\n    </AuthContext.Consumer>\n  );\n};\n*/\n\n// //todo -- use Here Context\nconst Navigation = () => {\n  const ctx = useContext(AuthContext);\n\n  return (\n    <nav className={classes.nav}>\n      <ul>\n        {ctx.isLoggedIn && (\n          <li>\n            <a href=\"/\">Users</a>\n          </li>\n        )}\n        {ctx.isLoggedIn && (\n          <li>\n            <a href=\"/\">Admin</a>\n          </li>\n        )}\n        {ctx.isLoggedIn && (\n          <li>\n            <button onClick={ctx.onLogout}>Logout</button>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\nexport default Navigation;\n","import React from \"react\";\n\nimport Navigation from \"./Navigation\";\nimport classes from \"./MainHeader.module.css\";\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes[\"main-header\"]}>\n      <h1>A Typical Page</h1>\n      {/* <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} /> */}\n      <Navigation onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","// import React, { useState, useEffect } from \"react\";\nimport React, { useContext } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/store/auth-context\";\n\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const ctx = useContext(AuthContext);\n  /*\n  //! here move romveItem to auth file\n  // useEffect(() => {\n  //   const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n  //   if (storedUserLoggedInInformation === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    //! here move romveItem to auth file\n    // localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    //! here move romveItem to auth file\n    // localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n*/\n\n  // return (\n  //     //todo -- Here we use Provider [object in react] from file auth-context\n  //     //! here we add defult value in tag [auth]\n  //     <AuthContext.Provider\n  //       value={{\n  //         isLoggedIn: isLoggedIn,\n  //         onLogout: logoutHandler,\n  //       }}\n  //     >\n  //       <React.Fragment>\n  //         {/* <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} /> */}\n  //         <MainHeader onLogout={logoutHandler} />\n  //         <main>\n  //           {!isLoggedIn && <Login onLogin={loginHandler} />}\n  //           {isLoggedIn && <Home onLogout={logoutHandler} />}\n  //         </main>\n  //       </React.Fragment>\n  //     </AuthContext.Provider>\n  // );\n\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { AuthContextProvider } from \"./components/store/auth-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>\n);\n"],"sourceRoot":""}